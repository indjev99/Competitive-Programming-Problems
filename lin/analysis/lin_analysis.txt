1.

Наивното решение.
Смятаме комбинациите с триъгълника на Паскал.
После просто итерираме от n до m. 

O(n * m)

2.

Отклонение от пълното решение.
Вдигаме матрицата описваща линейната зависимост на степен m.
За целта използваме бързо степенуване.
Накрая умножаваме по началния вектор.

O(n^3 * log m)

3-7.

Анализираме характеристичния полином на редицата:

x^n = - Sum_{k = 1}^n (n choose k) (-1)^k x^{n - k}

x^n = - Sum_{k = 0}^{n - 1} (n choose k) (-1)^{n - k} x^k

Sum_{k = 0}^{n - 1} (n choose k) (-1)^{n - k} x^k = 0

(x - 1)^n = 0

Имаме n пъти повторен корен x = 1.

Следва, че базовите решения са от вида a_i = i^k, за k от 0 до n - 1.
Общото решение е от вида a_i = Sum_{k = 0}^{n - 1} C_k * i^k.

Забелязваме, че a_i е полином от {n - 1}-ва степен на i.
Коефициентие C_k трябва да се нагасят по зададените начални стойности.

3.

Знаем всички n - 1 корена на полинома, именно a_1 = ... = a_{n - 1} = 0.

a_i = D * Prod_{k = 1}^{n - 1} (k - i)

a_0 = D * (n - 1)!

D = a_0 * (n - 1)!^{-1} (където вдигаме на -1-ва по модул)

Та сега имаме формула за D, която можем да сметнем в началото.
След това откриваме a_m като просто умножим D по даденото произведение.

O(n + log MOD)

4.

Леко отклонение от пълното решение.

Знаем всички без 1 корена на полинома.

a_i = (D + E * i) * Prod_{k = 2}^{n - 1} (k - i)

a_0 = D * (n - 1)!

D = a_0 * (n - 1)!^{-1}

a_1 = (D + E) * Prod_{k = 2}^{n - 1} (k - i)

a_1 = (D + E) * (n - 2)!

D + E = a_1 * (n - 2)!^{-1}

Е = a_1 * (n - 2)!^{-1} - D

Знаейки D и E, можем да сметнем a_m, подобно на 3.

О(n + log MOD)

5.

Не много интересна подзадача, когато имаме 3.
Дадена е предимно като подсказка.
Тук трябва да направим нещо много подобно на 3.
Нека a_t да е единствения даден елемент различен от 0.
Тогава имаме че:

a_i = D * Prod_{0 <= k <= n - 1, k != t} (k - i)

a_t = D * Prod_{0 <= k <= n - 1, k != t} (k - t)

D = a_t * (Prod_{0 <= k <= n - 1, k != t} (k - t))^{-1}

О(n + log MOD)

6.

Използваме трик по линеарност. 
Вместо да се опитваме да решим уравнение от {n - 1}-ва степен.
Използваме подзадача 5. n пъти.
Нека разгледаме n редици с формата на a: b_0, ... b_{n - 1}.
Нека Sum_{t = 0}^{n - 1} b_t_i = a_i за всяко 0 <= i <= n - 1.
По индукция следва, че Sum_{t = 0}^{n - 1} b_t_i = a_i за всяко i.
Сега вземаме n-те редици да са такива, че всяка да има по един
ненулев елемент сред първите си n; т.е. от типа в подзадача 5.
По-точно: b_t_t = a_t и b_t_i = 0 за 0 <= i < t и t < i <= n - 1.
Сумата на тези редици е точно редицата a.
После просто решаваме подзадача 5. за всяка от тези редици.
Накрая събираме отговорите.

O(n^2 + n log MOD)

Ако прескачаме нулевите елементи, можем да хванем и позадачи 3-5.
Ако означим броя ненулвеи елементи с s, тогава сложността е:

O(sn + s log MOD)

7.

Същото решение като 6., но по-бързо.
Вместо да решаваме 5. следим движещи се произведения.
Така на всяка итерация (т.е. за всяко t) само ъпдейтваме в O(log MOD).

O(n log MOD)
